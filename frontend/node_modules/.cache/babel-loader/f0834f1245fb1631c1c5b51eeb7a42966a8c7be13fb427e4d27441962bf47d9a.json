{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Tripti\\\\TRIPTI_HUB_22201907\\\\frontend\\\\src\\\\components\\\\MonthConfiguration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst MonthConfiguration = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedMonths, setSelectedMonths] = useState([]);\n  const [isConfigured, setIsConfigured] = useState(false);\n  React.useEffect(() => {\n    // Fetch existing selected months on mount\n    const fetchSelectedMonths = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/months');\n        const data = await response.json();\n        if (data.success && data.months.length > 0) {\n          setSelectedMonths(data.months.map(m => m.month_name));\n          setIsConfigured(true);\n        }\n      } catch (error) {\n        console.error('Error fetching selected months:', error);\n      }\n    };\n    fetchSelectedMonths();\n  }, []);\n  const handleMonthClick = month => {\n    if (isConfigured) return; // disable editing if already configured\n    if (selectedMonths.includes(month)) {\n      // Remove month if already selected\n      setSelectedMonths(selectedMonths.filter(m => m !== month));\n    } else {\n      // Add month if less than 3 selected\n      if (selectedMonths.length < 3) {\n        setSelectedMonths([...selectedMonths, month]);\n      }\n    }\n  };\n  const handleConfirm = async () => {\n    if (selectedMonths.length !== 3) {\n      alert('Please select exactly 3 months.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/months', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          months: selectedMonths\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setIsConfigured(true);\n        alert('Months configured successfully.');\n        navigate('/admin-portal');\n      } else {\n        alert(data.message || 'Failed to configure months.');\n      }\n    } catch (error) {\n      console.error('Error saving months:', error);\n      alert('Server error while saving months.');\n    }\n  };\n  const handleSignOut = () => {\n    // TODO: Clear auth tokens or session\n    navigate('/');\n  };\n  const handleResetMonths = () => {\n    navigate('/reset-months-captcha');\n  };\n  const handleBack = () => {\n    navigate('/admin-portal');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-neongreen via-milkywhite to-cream text-[#262840] p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mb-6 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Month Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBack,\n          className: \"bg-[#262840] text-neongreen px-4 py-2 rounded hover:bg-[#3a3c4e] transition\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSignOut,\n          className: \"bg-[#262840] text-neongreen px-4 py-2 rounded hover:bg-[#3a3c4e] transition\",\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 md:grid-cols-4 gap-4 mb-6\",\n      children: months.map(month => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMonthClick(month),\n        className: `p-4 rounded shadow font-semibold transition ${selectedMonths.includes(month) ? 'bg-[#262840] text-neongreen' : 'bg-white text-[#262840]'}`,\n        disabled: isConfigured,\n        children: month\n      }, month, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Selected Months:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedMonths.map(month => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-1\",\n          children: [month, \" - 400 tokens\"]\n        }, month, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirm,\n      disabled: isConfigured,\n      className: `px-6 py-3 rounded font-semibold transition ${isConfigured ? 'bg-gray-400 text-gray-700 cursor-not-allowed' : 'bg-[#262840] text-neongreen hover:bg-[#3a3c4e]'}`,\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResetMonths,\n      className: \"ml-4 px-6 py-3 rounded font-semibold transition bg-red-600 text-white hover:bg-red-700\",\n      children: \"Reset Months\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthConfiguration, \"ihxuHEj+rqW22xNNcmnaxUvCnbE=\", false, function () {\n  return [useNavigate];\n});\n_c = MonthConfiguration;\nexport default MonthConfiguration;\nvar _c;\n$RefreshReg$(_c, \"MonthConfiguration\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","months","MonthConfiguration","_s","navigate","selectedMonths","setSelectedMonths","isConfigured","setIsConfigured","useEffect","fetchSelectedMonths","response","fetch","data","json","success","length","map","m","month_name","error","console","handleMonthClick","month","includes","filter","handleConfirm","alert","method","headers","body","JSON","stringify","message","handleSignOut","handleResetMonths","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hp/Tripti/TRIPTI_HUB_22201907/frontend/src/components/MonthConfiguration.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst months = [\r\n  'January', 'February', 'March', 'April', 'May', 'June',\r\n  'July', 'August', 'September', 'October', 'November', 'December'\r\n];\r\n\r\nconst MonthConfiguration = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedMonths, setSelectedMonths] = useState([]);\r\n  const [isConfigured, setIsConfigured] = useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Fetch existing selected months on mount\r\n    const fetchSelectedMonths = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/months');\r\n        const data = await response.json();\r\n        if (data.success && data.months.length > 0) {\r\n          setSelectedMonths(data.months.map(m => m.month_name));\r\n          setIsConfigured(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching selected months:', error);\r\n      }\r\n    };\r\n    fetchSelectedMonths();\r\n  }, []);\r\n\r\n  const handleMonthClick = (month) => {\r\n    if (isConfigured) return; // disable editing if already configured\r\n    if (selectedMonths.includes(month)) {\r\n      // Remove month if already selected\r\n      setSelectedMonths(selectedMonths.filter(m => m !== month));\r\n    } else {\r\n      // Add month if less than 3 selected\r\n      if (selectedMonths.length < 3) {\r\n        setSelectedMonths([...selectedMonths, month]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    if (selectedMonths.length !== 3) {\r\n      alert('Please select exactly 3 months.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/months', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ months: selectedMonths }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setIsConfigured(true);\r\n        alert('Months configured successfully.');\r\n        navigate('/admin-portal');\r\n      } else {\r\n        alert(data.message || 'Failed to configure months.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving months:', error);\r\n      alert('Server error while saving months.');\r\n    }\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    // TODO: Clear auth tokens or session\r\n    navigate('/');\r\n  };\r\n\r\n  const handleResetMonths = () => {\r\n    navigate('/reset-months-captcha');\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/admin-portal');\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-neongreen via-milkywhite to-cream text-[#262840] p-8\">\r\n      <header className=\"mb-6 flex justify-between items-center\">\r\n        <h1 className=\"text-3xl font-bold\">Month Configuration</h1>\r\n        <div className=\"flex space-x-4\">\r\n          <button\r\n            onClick={handleBack}\r\n            className=\"bg-[#262840] text-neongreen px-4 py-2 rounded hover:bg-[#3a3c4e] transition\"\r\n          >\r\n            Back\r\n          </button>\r\n          <button\r\n            onClick={handleSignOut}\r\n            className=\"bg-[#262840] text-neongreen px-4 py-2 rounded hover:bg-[#3a3c4e] transition\"\r\n          >\r\n            Sign Out\r\n          </button>\r\n        </div>\r\n      </header>\r\n      <div className=\"grid grid-cols-3 md:grid-cols-4 gap-4 mb-6\">\r\n        {months.map((month) => (\r\n          <button\r\n            key={month}\r\n            onClick={() => handleMonthClick(month)}\r\n            className={`p-4 rounded shadow font-semibold transition ${\r\n              selectedMonths.includes(month)\r\n                ? 'bg-[#262840] text-neongreen'\r\n                : 'bg-white text-[#262840]'\r\n            }`}\r\n            disabled={isConfigured}\r\n          >\r\n            {month}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-xl font-semibold mb-2\">Selected Months:</h2>\r\n        <ul>\r\n          {selectedMonths.map((month) => (\r\n            <li key={month} className=\"mb-1\">\r\n              {month} - 400 tokens\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <button\r\n        onClick={handleConfirm}\r\n        disabled={isConfigured}\r\n        className={`px-6 py-3 rounded font-semibold transition ${\r\n          isConfigured\r\n            ? 'bg-gray-400 text-gray-700 cursor-not-allowed'\r\n            : 'bg-[#262840] text-neongreen hover:bg-[#3a3c4e]'\r\n        }`}\r\n      >\r\n        Confirm\r\n      </button>\r\n      <button\r\n        onClick={handleResetMonths}\r\n        className=\"ml-4 px-6 py-3 rounded font-semibold transition bg-red-600 text-white hover:bg-red-700\"\r\n      >\r\n        Reset Months\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthConfiguration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}