{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Tripti\\\\TRIPTI_HUB_22201907\\\\frontend\\\\src\\\\components\\\\ResetMonthsCaptcha.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst operations = [{\n  op: 'add',\n  symbol: '+'\n}, {\n  op: 'subtract',\n  symbol: '-'\n}, {\n  op: 'multiply',\n  symbol: '*'\n}];\nconst getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst ResetMonthsCaptcha = () => {\n  _s();\n  var _operations$find;\n  const navigate = useNavigate();\n  const [num1, setNum1] = useState(0);\n  const [num2, setNum2] = useState(0);\n  const [operation, setOperation] = useState('add');\n  const [captchaInput, setCaptchaInput] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    generateCaptcha();\n  }, []);\n  const generateCaptcha = () => {\n    if (num1 !== 0 && num2 !== 0) {\n      // Do not generate new captcha if one already exists\n      return;\n    }\n    const n1 = getRandomInt(1, 20);\n    const n2 = getRandomInt(1, 20);\n    const opIndex = getRandomInt(0, operations.length - 1);\n    setNum1(n1);\n    setNum2(n2);\n    setOperation(operations[opIndex].op);\n    setCaptchaInput('');\n    setError('');\n    setSuccess('');\n  };\n  const calculateResult = () => {\n    switch (operation) {\n      case 'add':\n        return num1 + num2;\n      case 'subtract':\n        return num1 - num2;\n      case 'multiply':\n        return num1 * num2;\n      default:\n        return null;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (captchaInput === '') {\n      setError('Captcha result is required');\n      return;\n    }\n    const expectedResult = calculateResult();\n    if (expectedResult === null) {\n      setError('Invalid captcha operation');\n      return;\n    }\n\n    // For division, allow some tolerance for floating point\n    const userResult = parseFloat(captchaInput);\n    if (operation === 'divide' && Math.abs(userResult - expectedResult) > 0.0001 || operation !== 'divide' && userResult !== expectedResult) {\n      setError('Captcha validation failed');\n      generateCaptcha();\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/reset-months', {\n        captchaResult: userResult,\n        num1,\n        num2,\n        operation\n      });\n      if (response.data.success) {\n        setSuccess('Months configuration reset successful. Redirecting...');\n        setTimeout(() => {\n          navigate('/month-configuration');\n        }, 2000);\n      } else {\n        setError(response.data.message || 'Reset failed');\n        generateCaptcha();\n      }\n    } catch (err) {\n      setError('Server error. Please try again later.');\n      generateCaptcha();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex font-sans bg-background text-foreground justify-center items-center p-12\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-foreground p-8 rounded-3xl shadow-xl max-w-md w-full space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Reset Months Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg font-semibold text-black\",\n        children: [\"Solve: \", num1, \" \", (_operations$find = operations.find(o => o.op === operation)) === null || _operations$find === void 0 ? void 0 : _operations$find.symbol, \" \", num2, \" = ?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter captcha result\",\n        value: captchaInput,\n        onChange: e => setCaptchaInput(e.target.value),\n        required: true,\n        className: \"w-full p-3 rounded-xl bg-background text-foreground placeholder-cream focus:outline-none focus:ring-4 focus:ring-neongreen transition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-600\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-neongreen text-background py-3 rounded-xl text-lg font-semibold hover:bg-primary-hover transition shadow-lg\",\n        children: \"Reset Months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: generateCaptcha,\n        className: \"w-full bg-gray-500 text-background py-2 rounded-xl text-md font-semibold hover:bg-gray-600 transition shadow-lg\",\n        children: \"Refresh Captcha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetMonthsCaptcha, \"xdIVUX+BkhomtMhRKklrMBs8cpM=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetMonthsCaptcha;\nexport default ResetMonthsCaptcha;\nvar _c;\n$RefreshReg$(_c, \"ResetMonthsCaptcha\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","operations","op","symbol","getRandomInt","min","max","Math","floor","random","ResetMonthsCaptcha","_s","_operations$find","navigate","num1","setNum1","num2","setNum2","operation","setOperation","captchaInput","setCaptchaInput","error","setError","success","setSuccess","generateCaptcha","n1","n2","opIndex","length","calculateResult","handleSubmit","e","preventDefault","expectedResult","userResult","parseFloat","abs","response","post","captchaResult","data","setTimeout","message","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","find","o","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Tripti/TRIPTI_HUB_22201907/frontend/src/components/ResetMonthsCaptcha.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst operations = [\r\n  { op: 'add', symbol: '+' },\r\n  { op: 'subtract', symbol: '-' },\r\n  { op: 'multiply', symbol: '*' },\r\n];\r\n\r\nconst getRandomInt = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nconst ResetMonthsCaptcha = () => {\r\n  const navigate = useNavigate();\r\n  const [num1, setNum1] = useState(0);\r\n  const [num2, setNum2] = useState(0);\r\n  const [operation, setOperation] = useState('add');\r\n  const [captchaInput, setCaptchaInput] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  useEffect(() => {\r\n    generateCaptcha();\r\n  }, []);\r\n\r\n  const generateCaptcha = () => {\r\n    if (num1 !== 0 && num2 !== 0) {\r\n      // Do not generate new captcha if one already exists\r\n      return;\r\n    }\r\n    const n1 = getRandomInt(1, 20);\r\n    const n2 = getRandomInt(1, 20);\r\n    const opIndex = getRandomInt(0, operations.length - 1);\r\n    setNum1(n1);\r\n    setNum2(n2);\r\n    setOperation(operations[opIndex].op);\r\n    setCaptchaInput('');\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  const calculateResult = () => {\r\n    switch (operation) {\r\n      case 'add':\r\n        return num1 + num2;\r\n      case 'subtract':\r\n        return num1 - num2;\r\n      case 'multiply':\r\n        return num1 * num2;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    if (captchaInput === '') {\r\n      setError('Captcha result is required');\r\n      return;\r\n    }\r\n\r\n    const expectedResult = calculateResult();\r\n    if (expectedResult === null) {\r\n      setError('Invalid captcha operation');\r\n      return;\r\n    }\r\n\r\n    // For division, allow some tolerance for floating point\r\n    const userResult = parseFloat(captchaInput);\r\n    if (\r\n      (operation === 'divide' && Math.abs(userResult - expectedResult) > 0.0001) ||\r\n      (operation !== 'divide' && userResult !== expectedResult)\r\n    ) {\r\n      setError('Captcha validation failed');\r\n      generateCaptcha();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/reset-months', {\r\n        captchaResult: userResult,\r\n        num1,\r\n        num2,\r\n        operation,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setSuccess('Months configuration reset successful. Redirecting...');\r\n        setTimeout(() => {\r\n          navigate('/month-configuration');\r\n        }, 2000);\r\n      } else {\r\n        setError(response.data.message || 'Reset failed');\r\n        generateCaptcha();\r\n      }\r\n    } catch (err) {\r\n      setError('Server error. Please try again later.');\r\n      generateCaptcha();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex font-sans bg-background text-foreground justify-center items-center p-12\">\r\n      <form onSubmit={handleSubmit} className=\"bg-foreground p-8 rounded-3xl shadow-xl max-w-md w-full space-y-6\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Reset Months Configuration</h2>\r\n        <div className=\"text-lg font-semibold text-black\">\r\n          Solve: {num1} {operations.find((o) => o.op === operation)?.symbol} {num2} = ?\r\n        </div>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter captcha result\"\r\n          value={captchaInput}\r\n          onChange={(e) => setCaptchaInput(e.target.value)}\r\n          required\r\n          className=\"w-full p-3 rounded-xl bg-background text-foreground placeholder-cream focus:outline-none focus:ring-4 focus:ring-neongreen transition\"\r\n        />\r\n        {error && <p className=\"text-red-600\">{error}</p>}\r\n        {success && <p className=\"text-green-600\">{success}</p>}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-neongreen text-background py-3 rounded-xl text-lg font-semibold hover:bg-primary-hover transition shadow-lg\"\r\n        >\r\n          Reset Months\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={generateCaptcha}\r\n          className=\"w-full bg-gray-500 text-background py-2 rounded-xl text-md font-semibold hover:bg-gray-600 transition shadow-lg\"\r\n        >\r\n          Refresh Captcha\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetMonthsCaptcha;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}