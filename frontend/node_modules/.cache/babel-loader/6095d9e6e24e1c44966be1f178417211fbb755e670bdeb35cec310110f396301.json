{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Website\\\\frontend\\\\src\\\\components\\\\TokenSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenSelection = ({\n  studentId\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedMeal, setSelectedMeal] = useState('');\n  const [error, setError] = useState('');\n  const [confirming, setConfirming] = useState(false);\n  const mealTypes = ['Beef', 'Chicken', 'Mutton', 'Duck'];\n  const handleConfirm = async () => {\n    if (!selectedMeal) {\n      setError('Please select a meal type');\n      return;\n    }\n    setError('');\n    setConfirming(true);\n    try {\n      const response = await axios.post('http://localhost:5000/api/submit-token', {\n        studentId,\n        mealType: selectedMeal\n      });\n      alert('Token confirmed!');\n      navigate('/student-portal');\n    } catch (err) {\n      if (err.response && err.response.data && err.response.data.message) {\n        setError(err.response.data.message);\n      } else {\n        setError('Server error. Please try again later.');\n      }\n    } finally {\n      setConfirming(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Choose Your Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4 mb-6 w-full max-w-md\",\n      children: mealTypes.map(meal => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedMeal(meal),\n        className: `p-4 rounded border text-center ${selectedMeal === meal ? 'bg-blue-600 text-white' : 'bg-white text-gray-800'}`,\n        children: meal\n      }, meal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirm,\n      disabled: confirming,\n      className: \"bg-green-600 text-white py-2 px-6 rounded hover:bg-green-700 transition\",\n      children: confirming ? 'Confirming...' : 'Confirm'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenSelection, \"lXx8OYMarkjJH5HEKZdmsjXKHJY=\", false, function () {\n  return [useNavigate];\n});\n_c = TokenSelection;\nexport default TokenSelection;\nvar _c;\n$RefreshReg$(_c, \"TokenSelection\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","TokenSelection","studentId","_s","navigate","selectedMeal","setSelectedMeal","error","setError","confirming","setConfirming","mealTypes","handleConfirm","response","post","mealType","alert","err","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","meal","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Website/frontend/src/components/TokenSelection.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nconst TokenSelection = ({ studentId }) => {\r\n  const navigate = useNavigate();\r\n  const [selectedMeal, setSelectedMeal] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [confirming, setConfirming] = useState(false);\r\n\r\n  const mealTypes = ['Beef', 'Chicken', 'Mutton', 'Duck'];\r\n\r\n  const handleConfirm = async () => {\r\n    if (!selectedMeal) {\r\n      setError('Please select a meal type');\r\n      return;\r\n    }\r\n    setError('');\r\n    setConfirming(true);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/submit-token', {\r\n        studentId,\r\n        mealType: selectedMeal,\r\n      });\r\n      alert('Token confirmed!');\r\n      navigate('/student-portal');\r\n    } catch (err) {\r\n      if (err.response && err.response.data && err.response.data.message) {\r\n        setError(err.response.data.message);\r\n      } else {\r\n        setError('Server error. Please try again later.');\r\n      }\r\n    } finally {\r\n      setConfirming(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Choose Your Token</h1>\r\n      <div className=\"grid grid-cols-2 gap-4 mb-6 w-full max-w-md\">\r\n        {mealTypes.map((meal) => (\r\n          <button\r\n            key={meal}\r\n            onClick={() => setSelectedMeal(meal)}\r\n            className={`p-4 rounded border text-center ${\r\n              selectedMeal === meal ? 'bg-blue-600 text-white' : 'bg-white text-gray-800'\r\n            }`}\r\n          >\r\n            {meal}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n      <button\r\n        onClick={handleConfirm}\r\n        disabled={confirming}\r\n        className=\"bg-green-600 text-white py-2 px-6 rounded hover:bg-green-700 transition\"\r\n      >\r\n        {confirming ? 'Confirming...' : 'Confirm'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TokenSelection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}