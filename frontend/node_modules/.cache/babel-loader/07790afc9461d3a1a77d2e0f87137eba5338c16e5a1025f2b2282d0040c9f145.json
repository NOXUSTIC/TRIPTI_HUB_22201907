{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Tripti\\\\TRIPTI_HUB_22201907\\\\frontend\\\\src\\\\components\\\\MonthConfiguration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst MonthConfiguration = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedMonths, setSelectedMonths] = useState([]);\n  const handleMonthClick = month => {\n    if (selectedMonths.includes(month)) {\n      // Remove month if already selected\n      setSelectedMonths(selectedMonths.filter(m => m !== month));\n    } else {\n      // Add month if less than 3 selected\n      if (selectedMonths.length < 3) {\n        setSelectedMonths([...selectedMonths, month]);\n      }\n    }\n  };\n  const handleConfirm = () => {\n    if (selectedMonths.length !== 3) {\n      alert('Please select exactly 3 months.');\n      return;\n    }\n    // TODO: Save the selected months and allocations (400 tokens each) to backend or state\n    // For now, just navigate back to AdminPortal\n    navigate('/admin-portal');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-background text-foreground p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Month Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 md:grid-cols-4 gap-4 mb-6\",\n      children: months.map(month => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMonthClick(month),\n        className: `p-4 rounded shadow font-semibold transition ${selectedMonths.includes(month) ? 'bg-neongreen text-background' : 'bg-foreground text-foreground'}`,\n        children: month\n      }, month, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Selected Months:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedMonths.map(month => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-1\",\n          children: [month, \" - 400 tokens\"]\n        }, month, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirm,\n      className: \"bg-neongreen text-background px-6 py-3 rounded font-semibold hover:bg-primary-hover transition\",\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthConfiguration, \"cRlrCVkkIbUyEhoyaZiSz/CRGBA=\", false, function () {\n  return [useNavigate];\n});\n_c = MonthConfiguration;\nexport default MonthConfiguration;\nvar _c;\n$RefreshReg$(_c, \"MonthConfiguration\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","months","MonthConfiguration","_s","navigate","selectedMonths","setSelectedMonths","handleMonthClick","month","includes","filter","m","length","handleConfirm","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Tripti/TRIPTI_HUB_22201907/frontend/src/components/MonthConfiguration.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst months = [\r\n  'January', 'February', 'March', 'April', 'May', 'June',\r\n  'July', 'August', 'September', 'October', 'November', 'December'\r\n];\r\n\r\nconst MonthConfiguration = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedMonths, setSelectedMonths] = useState([]);\r\n\r\n  const handleMonthClick = (month) => {\r\n    if (selectedMonths.includes(month)) {\r\n      // Remove month if already selected\r\n      setSelectedMonths(selectedMonths.filter(m => m !== month));\r\n    } else {\r\n      // Add month if less than 3 selected\r\n      if (selectedMonths.length < 3) {\r\n        setSelectedMonths([...selectedMonths, month]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    if (selectedMonths.length !== 3) {\r\n      alert('Please select exactly 3 months.');\r\n      return;\r\n    }\r\n    // TODO: Save the selected months and allocations (400 tokens each) to backend or state\r\n    // For now, just navigate back to AdminPortal\r\n    navigate('/admin-portal');\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-background text-foreground p-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Month Configuration</h1>\r\n      <div className=\"grid grid-cols-3 md:grid-cols-4 gap-4 mb-6\">\r\n        {months.map((month) => (\r\n          <button\r\n            key={month}\r\n            onClick={() => handleMonthClick(month)}\r\n            className={`p-4 rounded shadow font-semibold transition ${\r\n              selectedMonths.includes(month)\r\n                ? 'bg-neongreen text-background'\r\n                : 'bg-foreground text-foreground'\r\n            }`}\r\n          >\r\n            {month}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-xl font-semibold mb-2\">Selected Months:</h2>\r\n        <ul>\r\n          {selectedMonths.map((month) => (\r\n            <li key={month} className=\"mb-1\">\r\n              {month} - 400 tokens\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <button\r\n        onClick={handleConfirm}\r\n        className=\"bg-neongreen text-background px-6 py-3 rounded font-semibold hover:bg-primary-hover transition\"\r\n      >\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthConfiguration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}